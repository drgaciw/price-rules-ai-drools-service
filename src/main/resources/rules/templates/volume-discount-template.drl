package com.example.pricerulesaidrools.rules.templates;

import com.example.pricerulesaidrools.model.PricingRequest;
import com.example.pricerulesaidrools.model.PricingResult;
import com.example.pricerulesaidrools.model.FinancialMetrics;

global java.util.logging.Logger logger;

/**
 * Volume Discount Rule Template
 * This template provides a standardized way to create volume-based discount rules
 * with customizable thresholds and discount percentages.
 *
 * Parameters:
 * - metricField: The financial metric to use (e.g., "arr", "tcv", "acv")
 * - threshold1: First volume threshold
 * - threshold2: Second volume threshold
 * - threshold3: Third volume threshold
 * - threshold4: Fourth volume threshold
 * - discount1: Discount percentage for volume between threshold1 and threshold2
 * - discount2: Discount percentage for volume between threshold2 and threshold3
 * - discount3: Discount percentage for volume between threshold3 and threshold4
 * - discount4: Discount percentage for volume above threshold4
 * - ruleName: Base name for the generated rules
 */

template header
metricField
threshold1
threshold2
threshold3
threshold4
discount1
discount2
discount3
discount4
ruleName

template "Volume Discount Rules"

// Function to calculate volume-based discount
function double calculateVolumeDiscount(double volume, double threshold1, double threshold2, 
                                        double threshold3, double threshold4, 
                                        double discount1, double discount2, 
                                        double discount3, double discount4) {
    if (volume < threshold1) {
        return 0.0; // No discount for low volume
    } else if (volume < threshold2) {
        return discount1;
    } else if (volume < threshold3) {
        return discount2;
    } else if (volume < threshold4) {
        return discount3;
    } else {
        return discount4;
    }
}

// Base volume discount rule
rule "@{ruleName} Base Volume Discount"
    salience 100 // Higher priority to run before other rules
    when
        $request : PricingRequest($metrics : financialMetrics)
        $metrics : FinancialMetrics(@{metricField} != null)
        $result : PricingResult()
    then
        double volume = $metrics.get@{metricField.substring(0,1).toUpperCase()}@{metricField.substring(1)}().doubleValue();
        double discount = calculateVolumeDiscount(volume, @{threshold1}, @{threshold2}, 
                                                @{threshold3}, @{threshold4},
                                                @{discount1}, @{discount2}, 
                                                @{discount3}, @{discount4});
        
        if (discount > 0) {
            logger.info("Applying @{ruleName} volume discount of " + (discount * 100) + 
                       "% based on @{metricField} of " + volume);
            
            double basePrice = $request.getBasePrice();
            double finalPrice = basePrice * (1 - discount);
            
            $result.setDiscount(discount);
            $result.setFinalPrice(finalPrice);
            $result.addAppliedRule("@{ruleName} Volume Discount");
            
            // Set discount description
            String discountDesc = String.format("%.1f%% @{ruleName} volume discount", discount * 100);
            $result.setDiscountDescription(discountDesc);
            
            update($result);
        }
end

// Tier 1 volume discount rule
rule "@{ruleName} Tier 1 Volume Discount"
    when
        $request : PricingRequest($metrics : financialMetrics)
        $metrics : FinancialMetrics(@{metricField} != null && @{metricField}.doubleValue() >= @{threshold1} && @{metricField}.doubleValue() < @{threshold2})
        $result : PricingResult()
    then
        logger.info("Applied @{ruleName} Tier 1 volume discount");
        $result.addAppliedRule("@{ruleName} Tier 1");
        update($result);
end

// Tier 2 volume discount rule
rule "@{ruleName} Tier 2 Volume Discount"
    when
        $request : PricingRequest($metrics : financialMetrics)
        $metrics : FinancialMetrics(@{metricField} != null && @{metricField}.doubleValue() >= @{threshold2} && @{metricField}.doubleValue() < @{threshold3})
        $result : PricingResult()
    then
        logger.info("Applied @{ruleName} Tier 2 volume discount");
        $result.addAppliedRule("@{ruleName} Tier 2");
        update($result);
end

// Tier 3 volume discount rule
rule "@{ruleName} Tier 3 Volume Discount"
    when
        $request : PricingRequest($metrics : financialMetrics)
        $metrics : FinancialMetrics(@{metricField} != null && @{metricField}.doubleValue() >= @{threshold3} && @{metricField}.doubleValue() < @{threshold4})
        $result : PricingResult()
    then
        logger.info("Applied @{ruleName} Tier 3 volume discount");
        $result.addAppliedRule("@{ruleName} Tier 3");
        update($result);
end

// Tier 4 volume discount rule
rule "@{ruleName} Tier 4 Volume Discount"
    when
        $request : PricingRequest($metrics : financialMetrics)
        $metrics : FinancialMetrics(@{metricField} != null && @{metricField}.doubleValue() >= @{threshold4})
        $result : PricingResult()
    then
        logger.info("Applied @{ruleName} Tier 4 volume discount");
        $result.addAppliedRule("@{ruleName} Tier 4");
        update($result);
end

end template